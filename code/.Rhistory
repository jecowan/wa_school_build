return((1-b)*(c + b*sum(v*p_vals)))
}
res_wage(c,b)
# Set up parameters of search model.
sdt <- 0.2  # Standard deviation of teacher effectiveness
c   <- -0.00084*180  # Cost of not hiring (Hermann & Rockoff, 2012)
b   <- 0.99  # Discount factor
w_vals <- seq(-4*sdt, 4*sdt, 0.01)
p_vals <- diff(pnorm(w_vals, mean=0, sd=sdt)^8)
w_vals <- (w_vals+0.005)[1:length(p_vals)]
res_wage <- function(c,b,max=500,tol=0.000001){
v <- w_vals/(1-b)
v_next <- w_vals/(1-b)
i <- 0
error <- tol+1
while(i<max & error>tol) {
vals <- cbind(w_vals/(1-b), c + b*sum(v*p_vals))
v_next <- apply(vals,1,max)
error <- max(abs(v_next-v))
i <- i+1
v <- v_next
}
return((1-b)*(c + b*sum(v*p_vals)))
}
res_wage(c,b)
# Set up parameters of search model.
sdt <- 0.2  # Standard deviation of teacher effectiveness
c   <- -0.00084*180  # Cost of not hiring (Hermann & Rockoff, 2012)
b   <- 0.99  # Discount factor
w_vals <- seq(-4*sdt, 4*sdt, 0.01)
p_vals <- diff(pnorm(w_vals, mean=0, sd=sdt)^12)
w_vals <- (w_vals+0.005)[1:length(p_vals)]
res_wage <- function(c,b,max=500,tol=0.000001){
v <- w_vals/(1-b)
v_next <- w_vals/(1-b)
i <- 0
error <- tol+1
while(i<max & error>tol) {
vals <- cbind(w_vals/(1-b), c + b*sum(v*p_vals))
v_next <- apply(vals,1,max)
error <- max(abs(v_next-v))
i <- i+1
v <- v_next
}
return((1-b)*(c + b*sum(v*p_vals)))
}
res_wage(c,b)
sdt <- 0.2  # Standard deviation of teacher effectiveness
c   <- -0.00084*180  # Cost of not hiring (Hermann & Rockoff, 2012)
b   <- 0.99  # Discount factor
w_vals <- seq(-4*sdt, 4*sdt, 0.01)
p_vals <- diff(pnorm(w_vals, mean=0, sd=sdt)^10)
w_vals <- (w_vals+0.005)[1:length(p_vals)]
res_wage <- function(c,b,max=500,tol=0.000001){
v <- w_vals/(1-b)
v_next <- w_vals/(1-b)
i <- 0
error <- tol+1
while(i<max & error>tol) {
vals <- cbind(w_vals/(1-b), c + b*sum(v*p_vals))
v_next <- apply(vals,1,max)
error <- max(abs(v_next-v))
i <- i+1
v <- v_next
}
return((1-b)*(c + b*sum(v*p_vals)))
}
res_wage(c,b)
w_vals
p_vals
w_vals
sum(p_vals[1:127])
pnorm(2)
?rnorm
install.packages("TailRank")
install.packages("TailRank")
source("https://bioconductor.org/biocLite.R")
biocLite("Biobase")
qnorm(0.2)
(1.96-qnorm(0.2))*0.02
(1.96-qnorm(0.2))*0.01
(1.96-qnorm(0.2))*0.0132
(1.96-qnorm(0.2))*0.0124
library(pwr)
install.packages(pwr)
install.packages("pwr")
library(pwr)
pwr.f2.test(u=1, v=NULL, f2=0.1/0.9, sig.level=0.05, power=0.8)
pwr.f2.test(u=1, v=NULL, f2=0.01/0.99, sig.level=0.05, power=0.8)
pwr.f2.test(u=1, v=NULL, f2=0.04/0.96, sig.level=0.05, power=0.8)
pwr.f2.test(u=1, v=NULL, f2=0.02/0.98, sig.level=0.05, power=0.8)
x1 <- rnorm(4000, mean=0.12, sd=0.13)
x2 <- rnorm(4000, mean=-0.12, sd=0.13)
x <- c(x1,x2)
d <- kcde(x)
f <- cbind(d$eval.points, d$estimate)
library(ks)
d <- kcde(x)
f <- cbind(d$eval.points, d$estimate)
f
?seq
d <- kcde(x, eval.points=seq(-0.6,0.6,0.01))
f <- cbind(d$eval.points, d$estimate)
f
d1 <- kcde(x1, eval.points=seq(-0.6,0.6,0.01))
d2 <- kcde(x2, eval.points=seq(-0.6,0.6,0.01))
f1 <- cbind(d1$eval.points, d1$estimate)
f2 <- cbind(d2$eval.points, d2$estimate)
f1
pnorm(0)
pnorm(0.05/0.17)
pnorm(-0.05/0.17)
pnorm(-0.12/0.13)
pnorm(0.12/0.13)
0.5*pnorm(0.12/0.13) + 0.5*pnorm(-0.12/0.13)
0.5*pnorm(0.05/0.17) + 0.5*pnorm(-0.05/0.17)
pnorm(0.05/0.17)
install.packages("deamer")
install.packages("decon")
nb <- function(x){ 0.004*x - 0.002*x^2 }
nb(0)
nb(1)
nb(10)
nb(8)
nb(6)
nb(4)
nb(2)
install.package("equate")
install.packages("equate")
library(equate)
?eqaute
?equate
?freqtab
library(equate)
n <- 10000  # Number of students in each mode
mu_o <- 1   # Mean true score (online)
mu_p <- -1  # Mean true score (paper)
x <- norm(n, mean=mu_o, sd=1)
y <- norm(n, mean=mu_p, sd=1)
x <- rnorm(n, mean=mu_o, sd=1)
y <- rnorm(n, mean=mu_p, sd=1)
freqtab(x)
x
freqtab(x)
x <- round(x,0.1)
x
x <- rnorm(n, mean=mu_o, sd=1)
x <- round(x,1)
x
freqtab(x)
x <- group_by(x)
x <- group_by(x)
library(tidyverse)
x <- group_by(x)
x <- group_by(tibble(score=x), score)
x
?summarize
x <- group_by(tibble(score=x), score) %>% summarize(score=mean(score), freq=n())
x <- rnorm(n, mean=mu_o, sd=1)
y <- rnorm(n, mean=mu_p, sd=1)
x <- group_by(tibble(score=x), score) %>% summarize(score=mean(score), freq=n())
x <- group_by(tibble(score=x), score) %>%
summarize(n=freq=n())
x <- group_by(tibble(score=x), score) %>%
summarize(freq=n())
View(x)
x <- round(rnorm(n, mean=mu_o, sd=1), 1)
x <- group_by(tibble(score=x), score) %>%
summarize(freq=n())
x
View(x)
n <- 10000  # Number of students in each mode
mu_o <- 1   # Mean true score (online)
mu_p <- -1  # Mean true score (paper)
x <- round(rnorm(n, mean=mu_o, sd=1), 1)
y <- round(rnorm(n, mean=mu_p, sd=1), 1)
x <- group_by(tibble(score=x), score) %>%
summarize(freq=n())
y <- group_by(tibble(score=y), score) %>%
summarize(freq=n())
View(x)
View(y)
?equate
equate(x,y type=c("equipercentile"))
equate(x, y, type=c("equipercentile"))
x
freqtab(x)
x
?freqtab
x <- round(rnorm(1000, 100, 10))
head(freqtab(x, scales = 70:130)
)
head(freqtab(x, scales = 70:130)
)
freqtab(x, scales = 70:130)
x
x <- round(rnorm(n, mean=mu_o, sd=1), 1)
y <- round(rnorm(n, mean=mu_p, sd=1), 1)
x <- group_by(tibble(score=x), score) %>%
summarize(freq=n())
y <- group_by(tibble(score=y), score) %>%
summarize(freq=n())
x
summary(x)
summary(y)
x <- round(rnorm(n, mean=mu_o, sd=1), 1)
y <- round(rnorm(n, mean=mu_p, sd=1), 1)
summary(y)
summary(x)
n <- 10000  # Number of students in each mode
mu_o <- 100   # Mean true score (online)
mu_p <- 90  # Mean true score (paper)
x <- round(rnorm(n, mean=mu_o, sd=10), 1)
y <- round(rnorm(n, mean=mu_p, sd=10), 1)
x
y
x <- round(rnorm(n, mean=mu_o, sd=10))
y <- round(rnorm(n, mean=mu_p, sd=10))
x
summary(x)
summary(y)
freqtab(x, scales=50:150)
x <- freqtab(x, scales=50:150)
y <- freqtab(y, scales=50:150)
equate(x, y, type=c("equipercentile"))
z <- equate(x, y, type=c("equipercentile"))
attributes(x)
attributes(z)
z$equate
z$concordance
?equate
n <- 10000  # Number of students in each mode
mu_o <- 100   # Mean true score (online)
mu_p <- 90  # Mean true score (paper)
x <- round(rnorm(n, mean=mu_o, sd=10))
y <- round(rnorm(n, mean=mu_p, sd=10))
xtab <- freqtab(x, scales=50:150)
ytab <- freqtab(y, scales=50:150)
z <- equate(xtab, ytab, type=c("equipercentile"))
cbind(x, yx = equate(x, y = z))
source('~/Dropbox/Work/desc-teacher-fx/gen_student_dat.r', echo=TRUE)
library(tidyverse)
library(MASS)
library(lfe)
nt <- 4    # Number of teachers/school
ns <- 500  # Number of schools
nc <- 20   # Number of students/class
b  <- 0.05 # Teacher effect
teachers <- expand.grid(sid=1:ns, tid=1:nt)
teachers$t <- teachers$tid>=(floor(nt/2)+1)
# Generate student data and assign to classrooms.
students <- expand.grid(sid=1:ns, cid=1:nt, stuid=1:nc)
# Student achievement is measured with error, but
# classroom assignments are made on true achievement.
draw <- mvrnorm(n=nrow(students), mu=c(0,0),
Sigma=matrix(c(1,0.8,0.8,1),nrow=2))
students$xstar <- draw[,1]
students$x <- draw[,2]
students$n <- rnorm(n=nrow(students), mean=0, sd=2)
students <- group_by(students, sid) %>%
mutate(tid=ntile(x+n, nt)) %>%
group_by(sid, tid) %>%
mutate(xmean=mean(xstar))
# Generate outcomes data.
dat <- full_join(students, teachers, by=c("sid", "tid"))
dat <- arrange(dat, sid, tid, stuid)
dat$y <- dat$x + b*dat$t
# Value-added regressions.
summary(felm(y ~ t + xstar | 0 | 0 | tid, dat))
dat$xhat <- dat$xstar/0.8
summary(felm(y ~ t + xhat | 0 | 0 | tid, dat))
install.packages("eivtools")
library(eivtools)
install.packages("rjags")
install.packages("eivtools")
install.packages("R2jags")
install.packages("eivtools")
library(rjags)
install.packages("rjags")
install.packages("rjags", dependencies=TRUE)
install.packages("rjags")
library(rjags)
install.packages("eivtools")
library(eivtools)
evireg(y ~ t + xstar, dat, reliability=c(1,0.8))
eivreg(y ~ t + xstar, dat, reliability=c(1,0.8))
?eivreg
rel <- c(1,0.8)
names(rel) <- c("t", "xstar")
eivreg(y ~ t + xstar, dat, reliability=rel)
library(tidyverse)
library(MASS)
library(lfe)
library(eivtools)
nt <- 4    # Number of teachers/school
ns <- 500  # Number of schools
nc <- 20   # Number of students/class
b  <- 0.05 # Teacher effect
teachers <- expand.grid(sid=1:ns, tid=1:nt)
teachers$t <- teachers$tid>=(floor(nt/2)+1)
# Generate student data and assign to classrooms.
students <- expand.grid(sid=1:ns, cid=1:nt, stuid=1:nc)
# Student achievement is measured with error, but
# classroom assignments are made on true achievement.
draw <- mvrnorm(n=nrow(students), mu=c(0,0),
Sigma=matrix(c(1,0.8,0.8,1),nrow=2))
students$xstar <- draw[,1]
students$x <- draw[,2]
students$n <- rnorm(n=nrow(students), mean=0, sd=2)
students <- group_by(students, sid) %>%
mutate(tid=ntile(x+n, nt)) %>%
group_by(sid, tid) %>%
mutate(xmean=mean(xstar))
# Generate outcomes data.
dat <- full_join(students, teachers, by=c("sid", "tid"))
dat <- arrange(dat, sid, tid, stuid)
dat$y <- dat$x + b*dat$t
# Value-added regressions.
summary(felm(y ~ t + xstar | 0 | 0 | tid, dat))
summary(felm(y ~ t + xstar + xmean | 0 | 0 | tid, dat))
rel <- c(1, 0.8)
names(rel) <- c("t", "xstar")
eivreg(y ~ t + xstar, dat, reliability=rel)
dat$t <- as.numeric(dat$t)
dat
eivreg(y ~ t + xstar, dat, reliability=rel)
summary(felm(y ~ t + xstar + xmean | 0 | 0 | tid, dat))
source('~/Dropbox/Work/desc-teacher-fx/gen_student_dat.r', echo=TRUE)
rel2 <- c(1, 0.8, 1)
names(rel2) <- c("t", "xstar", "xmean")
summary(eivreg(y ~ t + xstar + xmean, dat, reliability=rel2))
# Value-added regressions.
summary(felm(y ~ t + x | 0 | 0 | tid, dat))
summary(felm(y ~ t + xstar | 0 | 0 | tid, dat))
summary(felm(y ~ t + xstar + xmean | 0 | 0 | tid, dat))
rel <- c(1, 0.8)
names(rel) <- c("t", "xstar")
summary(eivreg(y ~ t + xstar, dat, reliability=rel))
source('~/Dropbox/Work/desc-teacher-fx/gen_student_dat.r', echo=TRUE)
source('~/Dropbox/Work/desc-teacher-fx/gen_student_dat.r', echo=TRUE)
source('~/Dropbox/Work/desc-teacher-fx/gen_student_dat.r', echo=TRUE)
nt <- 4    # Number of teachers/school
ns <- 500  # Number of schools
nc <- 20   # Number of students/class
ny <- 5    # Number of years of data
b  <- 0.05 # Teacher effect
r  <- 0.80 # Test reliability
teachers <- expand.grid(sid=1:ns, tid=1:nt, year=1:ny)
teachers$t <- teachers$tid>=(floor(nt/2)+1)
View(teachers)
teachers$t <- as.numeric(teachers$tid>=(floor(nt/2)+1))
View(teachers)
# Generate student data and assign to classrooms.
students <- expand.grid(sid=1:ns, cid=1:nt, year=1:ny, stuid=1:nc)
draw <- mvrnorm(n=nrow(students), mu=c(0,0),
Sigma=matrix(c(1, r, r ,1),nrow=2))
students$xstar <- draw[,1]
students$x <- draw[,2]
students$n <- rnorm(n=nrow(students), mean=0, sd=2)
students <- group_by(students, sid, year) %>%
mutate(tid=ntile(x+n, nt)) %>%
group_by(sid, tid, year) %>%
mutate(xmean=mean(xstar))
dat <- full_join(students, teachers, by=c("sid", "tid", "year"))
dat <- arrange(dat, sid, tid, year, stuid)
dat$y <- dat$x + b*dat$t
dat$tid <- with(dat, interaction(sid, tid))
summary(felm(y ~ t + x | 0 | 0 | tid, dat))
summary(felm(y ~ t + xstar | 0 | 0 | tid, dat))
summary(felm(y ~ t + xstar + xmean | 0 | 0 | tid, dat))
?felm
m1 <- felm(y ~ xstar + xmean | tid | 0 | 0, dat)
dat$yresid <- m1$r.residuals
summary(felm(yresid ~ t | 0 | 0 | tid, dat))
m2 <- felm(y ~ xstar + xmean | tid | 0 | 0, dat)
dat$yresid <- m2$r.residuals
summary(felm(yresid ~ t + xmean | 0 | 0 | tid, dat))
summary(felm(yresid ~ t | 0 | 0 | tid, dat))
?getfe
getfe(m2)
dat.fe <- select(getfe(m2), effect, idx)
dat.fe <- dplyr::select(getfe(m2), effect, idx)
View(dat.fe)
source('~/Dropbox/Work/desc-teacher-fx/gen_student_dat.r', echo=TRUE)
m1$coefficients
m2$coefficients
r1
r2
source('~/Dropbox/Work/desc-teacher-fx/gen_student_dat.r', echo=TRUE)
with(dat, corr(x, xstar))
with(dat, cor(x, xstar))
?cor
?eivreg
summary(felm(y ~ t + x | 0 | 0 | tid, dat))
dat$yhat <- dat$y - dat$xstar
lm(yhat + t, dat)
lm(yhat ~ t, dat)
library(get_education_data)
library(educationdata)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
download.file("https://nces.ed.gov/ccd/Data/zip/ccd_lea_052_1516_w_1a_011717_csv.zip",
"ccd_lea_052_1516_w_1a_011717_csv.zip")
dir()
unzip("ccd_lea_052_1516_w_1a_011717_csv.zip")
dat <- read.table("ccd_lea_052_1516_w_1a_011717_csv.zip")
library(tidyverse)
dat <- read_csv(file="ccd_lea_052_1516_w_1a_011717_csv.zip")
View(dat)
library(Matching)
install.packages(Matching)
install.packages("Matching")
View(dat)
filter(dat, FIPST=="53")
x <- filter(dat, FIPST=="53")
View(x)
View(dat)
source('~/Dropbox/Work/desc-teacher-fx/gen_student_dat.r', echo=TRUE)
source('~/Dropbox/Work/desc-teacher-fx/gen_student_dat.r', echo=TRUE)
?download.file()
install.packages("tidycensus")
source('~/Dropbox/Work/washington/wa_s275_build/code/s275_build.r', echo=TRUE)
setwd("~/Dropbox/Work/washington/wa_s275_build/code")
source('~/Dropbox/Work/washington/wa_s275_build/code/s275_build.r', echo=TRUE)
txtStop()
setwd("/Users/james/Dropbox/Work/washington/wa_s275_build")
source('~/Dropbox/Work/washington/wa_s275_build/code/s275_stack.r', echo=TRUE)
library(tidyverse)
library(stringr)
library(quantmod)
library(educationdata)
library(haven)
library(forcats)
library(TeachingDemos)
source('~/Dropbox/Work/washington/wa_s275_build/code/s275_stack.r', echo=TRUE)
setwd("/Users/james/Dropbox/Work/washington/wa_s275_build/code")
source('~/Dropbox/Work/washington/wa_s275_build/code/s275_stack.r', echo=TRUE)
View(s275.dat)
s275.district <- select(s275.dat, cert, syear, codistid, lname, fname, mname,
sex, ethnic, hispanic, hdeg, hyear, exp, certfte, clasfte,
tfinsal, cbrtn) %>% distinct()
s275.district <- select(s275.dat, cert, syear, codistid, lname, fname, mname,
male, race, hispanic, hdeg, hyear, exp, certfte, clasfte,
tfinsal, cbrtn) %>% distinct()
s275.district <- select(s275.dat, cert, syear, codistid, lname, fname, mname,
male, race, hdeg, hyear, exp, certfte, clasfte,
tfinsal, cbrtn) %>% distinct()
s275.assignment <- select(s275.dat, cert, syear, codistid, bldg,
prog, act, droot, dsufx, grade, bldgn, assfte) %>%
distinct()
s275.assignment <- select(s275.dat, cert, syear, codistid, bldg,
prog, act, droot, dsufx, grade, assfte) %>% distinct()
s275.assignment <- select(s275.dat, cert, syear, codistid, bldg,
prog, act, droot, dsufx, grade, assfte)
rm(s275.dat, s275.96, s275.97, s275.98, s275.99, s275.00, s275.01,
s275.02, s275.03, s275.04, s275.05, s275.06, s275.07,
s275.08, s275.09, s275.10, s275.11, s275.12, s275.13,
s275.14, s275.15, s275.16, s275.17, s275.18)
install.packages("fredr")
library(fredr)
fredr_set_key(54d9f391adc59e5aa34488a9e89a4a04)
fredr_set_key("54d9f391adc59e5aa34488a9e89a4a04")
fredr("DPCERG3A086NBEA")
pcepi <- fredr("DPCERG3A086NBEA")
year(pcepi$date)
library(lubridate)
library(tidyverse)
year(pcepi$date)
pcepi <- fredr("DPCERG3A086NBEA") %>% mutate(date = year(date))
View(pcepi)
pcepi <- fredr("DPCERG3A086NBEA") %>% mutate(date = year(date) + 1)
View(pcepi)
pcepi <- fredr("DPCERG3A086NBEA") %>% mutate(syear = year(date) + 1)
s275.district <- left_join(s275.district, pcepi, by="syear") %>%
mutate(tfinsal12 = tfinsal * (100 / value)) %>%
select(-series_id, -date)
xtabs(~hyear, s275.district)
s275.district <- mutate(s275.district,
hyear=ifelse(hyear==0 & is.na(hdeg)==TRUE,NA,hyear),
hyear=ifelse((hyear==1900 | hyear==1915) &
is.na(hdeg)==TRUE,NA,hyear),
hyear=ifelse(hyear==0 & is.na(hdeg)==FALSE,2000,hyear),
hyear=ifelse(hyear>0 & hyear<100, hyear+1900, hyear),
hyear=ifelse(hyear>=100 & hyear<=1900, NA, hyear),
hyear=ifelse(hyear>=2020, NA, hyear))
xtabs(~hyear, s275.district)
download.file(paste("https://www.dropbox.com/s/fzu4wdquorn16n2/",
"2017-2018S-275FinalForPublic.csv?dl=1",sep=""),
"../intermediate/2017-2018S275FinalForPublic.csv")
download.file(paste("https://www.dropbox.com/s/fzu4wdquorn16n2/",
"2018-2019S-275FinalForPublic.csv?dl=1",sep=""),
"../intermediate/2018-2019S275FinalForPublic.csv")
# 2017-2018
s275.18 <- read.csv("../intermediate/2017-2018S275FinalForPublic.csv",
header=TRUE, skipNul=TRUE,
stringsAsFactors=FALSE) %>%
select(codistid=codist, lname=LastName, fname=FirstName, mname=MiddleName,
cert, sex, ethnic=race, hispanic,
hdeg, hyear, acred, icred, bcred, vcred, exp, certfte, clasfte,
tfinsal, cbrtn, prog, act, droot, dsufx, grade, bldgn, assfte, asshpy) %>%
s275_clean(2018)
s275.19 <- read.csv("../intermediate/2018-2019S275FinalForPublic.csv",
header=TRUE, skipNul=TRUE,
stringsAsFactors=FALSE) %>%
select(codistid=codist, lname=LastName, fname=FirstName, mname=MiddleName,
cert, sex, ethnic=race, hispanic,
hdeg, hyear, acred, icred, bcred, vcred, exp, certfte, clasfte,
tfinsal, cbrtn, prog, act, droot, dsufx, grade, bldgn, assfte, asshpy)
source('~/Dropbox/Work/washington/wa_s275_build/code/s275_stack.r', echo=TRUE)
?file.remove
source('~/Dropbox/Work/washington/wa_s275_build/code/s275_stack.r', echo=TRUE)
